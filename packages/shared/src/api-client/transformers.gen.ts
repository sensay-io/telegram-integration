// This file is auto-generated by @hey-api/openapi-ts

import type {
  GetV1ReplicasResponse,
  GetV1TrainingResponse,
  GetV1TrainingByTrainingIdResponse,
  GetV1ReplicasByReplicaUuidChatHistoryResponse,
  GetV1ReplicasByReplicaUuidChatHistoryTelegramResponse,
  GetV1ReplicasByReplicaUuidChatHistoryDiscordResponse,
  GetV1ReplicasByReplicaUuidChatHistoryWebResponse,
  GetV1ReplicasByReplicaUuidChatHistoryEmbedResponse,
} from './types.gen'

export const getV1ReplicasResponseTransformer = async (
  data: any,
): Promise<GetV1ReplicasResponse> => {
  data.items = data.items.map((item: any) => {
    if (item.created_at) {
      item.created_at = new Date(item.created_at)
    }
    return item
  })
  return data
}

export const getV1TrainingResponseTransformer = async (
  data: any,
): Promise<GetV1TrainingResponse> => {
  data.items = data.items.map((item: any) => {
    item.created_at = new Date(item.created_at)
    item.updated_at = new Date(item.updated_at)
    return item
  })
  return data
}

export const getV1TrainingByTrainingIdResponseTransformer = async (
  data: any,
): Promise<GetV1TrainingByTrainingIdResponse> => {
  data.created_at = new Date(data.created_at)
  data.updated_at = new Date(data.updated_at)
  return data
}

export const getV1ReplicasByReplicaUuidChatHistoryResponseTransformer = async (
  data: any,
): Promise<GetV1ReplicasByReplicaUuidChatHistoryResponse> => {
  if (data.items) {
    data.items = data.items.map((item: any) => {
      item.created_at = new Date(item.created_at)
      item.sources = item.sources.map((item: any) => {
        item.created_at = new Date(item.created_at)
        return item
      })
      return item
    })
  }
  return data
}

export const getV1ReplicasByReplicaUuidChatHistoryTelegramResponseTransformer = async (
  data: any,
): Promise<GetV1ReplicasByReplicaUuidChatHistoryTelegramResponse> => {
  if (data.items) {
    data.items = data.items.map((item: any) => {
      item.created_at = new Date(item.created_at)
      item.sources = item.sources.map((item: any) => {
        item.created_at = new Date(item.created_at)
        return item
      })
      return item
    })
  }
  return data
}

export const getV1ReplicasByReplicaUuidChatHistoryDiscordResponseTransformer = async (
  data: any,
): Promise<GetV1ReplicasByReplicaUuidChatHistoryDiscordResponse> => {
  if (data.items) {
    data.items = data.items.map((item: any) => {
      item.created_at = new Date(item.created_at)
      item.sources = item.sources.map((item: any) => {
        item.created_at = new Date(item.created_at)
        return item
      })
      return item
    })
  }
  return data
}

export const getV1ReplicasByReplicaUuidChatHistoryWebResponseTransformer = async (
  data: any,
): Promise<GetV1ReplicasByReplicaUuidChatHistoryWebResponse> => {
  if (data.items) {
    data.items = data.items.map((item: any) => {
      item.created_at = new Date(item.created_at)
      item.sources = item.sources.map((item: any) => {
        item.created_at = new Date(item.created_at)
        return item
      })
      return item
    })
  }
  return data
}

export const getV1ReplicasByReplicaUuidChatHistoryEmbedResponseTransformer = async (
  data: any,
): Promise<GetV1ReplicasByReplicaUuidChatHistoryEmbedResponse> => {
  if (data.items) {
    data.items = data.items.map((item: any) => {
      item.created_at = new Date(item.created_at)
      item.sources = item.sources.map((item: any) => {
        item.created_at = new Date(item.created_at)
        return item
      })
      return item
    })
  }
  return data
}
